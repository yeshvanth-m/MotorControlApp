/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/motorcontrolscreen_screen/MotorControlScreenViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MotorControlScreenViewBase::MotorControlScreenViewBase() :
    buttonCallback(this, &MotorControlScreenViewBase::buttonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    BG.setPosition(0, 0, 480, 272);
    BG.setColor(touchgfx::Color::getColorFromRGB(247, 255, 254));
    add(BG);

    M2_RPM_Guage.setBackground(touchgfx::Bitmap(BITMAP_CUSTOM_GUAGE_ID));
    M2_RPM_Guage.setPosition(153, 143, 120, 120);
    M2_RPM_Guage.setCenter(60, 60);
    M2_RPM_Guage.setStartEndAngle(-119, 122);
    M2_RPM_Guage.setRange(0, 2500);
    M2_RPM_Guage.setValue(0);
    M2_RPM_Guage.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_NEEDLES_ROUGH_ID, 5, 33);
    M2_RPM_Guage.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    M2_RPM_Guage.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    M2_RPM_Guage.setArcVisible();
    M2_RPM_GuagePainter.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_FILLERS_SWOOP_ID));
    M2_RPM_Guage.getArc().setPainter(M2_RPM_GuagePainter);
    M2_RPM_Guage.getArc().setRadius(50);
    M2_RPM_Guage.getArc().setLineWidth(49);
    M2_RPM_Guage.getArc().setCapPrecision(180);
    M2_RPM_Guage.setArcPosition(12, 12, 95, 71);
    add(M2_RPM_Guage);

    M2_G.setXY(202, 229);
    M2_G.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    M2_G.setLinespacing(0);
    M2_G.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A5QO));
    add(M2_G);

    M3_RPM_Slider.setXY(387, 11);
    M3_RPM_Slider.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THIN_TRACK_SMALL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THIN_TRACK_SMALL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THIN_ROUNDED_LIGHT_ID));
    M3_RPM_Slider.setupVerticalSlider(9, 12, 0, 0, 200);
    M3_RPM_Slider.setValueRange(0, 2500);
    M3_RPM_Slider.setValue(0);
    add(M3_RPM_Slider);

    M1_RPM_Slider.setXY(298, 11);
    M1_RPM_Slider.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THIN_TRACK_SMALL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THIN_TRACK_SMALL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THIN_ROUNDED_ACTIVE_ID));
    M1_RPM_Slider.setupVerticalSlider(9, 12, 0, 0, 200);
    M1_RPM_Slider.setValueRange(0, 2500);
    M1_RPM_Slider.setValue(0);
    add(M1_RPM_Slider);

    M3_RPM_Guage.setBackground(touchgfx::Bitmap(BITMAP_CUSTOM_GUAGE_ID));
    M3_RPM_Guage.setPosition(153, 11, 120, 120);
    M3_RPM_Guage.setCenter(60, 60);
    M3_RPM_Guage.setStartEndAngle(-119, 122);
    M3_RPM_Guage.setRange(0, 2500);
    M3_RPM_Guage.setValue(0);
    M3_RPM_Guage.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_NEEDLES_ROUGH_ID, 5, 33);
    M3_RPM_Guage.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    M3_RPM_Guage.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    M3_RPM_Guage.setArcVisible();
    M3_RPM_GuagePainter.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_FILLERS_SWOOP_ID));
    M3_RPM_Guage.getArc().setPainter(M3_RPM_GuagePainter);
    M3_RPM_Guage.getArc().setRadius(50);
    M3_RPM_Guage.getArc().setLineWidth(49);
    M3_RPM_Guage.getArc().setCapPrecision(180);
    M3_RPM_Guage.setArcPosition(12, 12, 95, 71);
    add(M3_RPM_Guage);

    M2_RPM_Slider.setXY(342, 11);
    M2_RPM_Slider.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THIN_TRACK_SMALL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THIN_TRACK_SMALL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THIN_ROUNDED_LIGHT_ID));
    M2_RPM_Slider.setupVerticalSlider(9, 12, 0, 0, 200);
    M2_RPM_Slider.setValueRange(0, 2500);
    M2_RPM_Slider.setValue(0);
    add(M2_RPM_Slider);

    M3_G.setXY(202, 98);
    M3_G.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    M3_G.setLinespacing(0);
    M3_G.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SBLD));
    add(M3_G);

    M1_RPM_Guage.setBackground(touchgfx::Bitmap(BITMAP_CUSTOM_GUAGE_ID));
    M1_RPM_Guage.setPosition(15, 143, 120, 120);
    M1_RPM_Guage.setCenter(60, 60);
    M1_RPM_Guage.setStartEndAngle(-119, 122);
    M1_RPM_Guage.setRange(0, 2500);
    M1_RPM_Guage.setValue(0);
    M1_RPM_Guage.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_NEEDLES_ROUGH_ID, 5, 33);
    M1_RPM_Guage.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    M1_RPM_Guage.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    M1_RPM_Guage.setArcVisible();
    M1_RPM_GuagePainter.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_FILLERS_SWOOP_ID));
    M1_RPM_Guage.getArc().setPainter(M1_RPM_GuagePainter);
    M1_RPM_Guage.getArc().setRadius(50);
    M1_RPM_Guage.getArc().setLineWidth(49);
    M1_RPM_Guage.getArc().setCapPrecision(180);
    M1_RPM_Guage.setArcPosition(12, 12, 95, 71);
    add(M1_RPM_Guage);

    ClearFault_M3.setXY(104, 95);
    ClearFault_M3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID));
    add(ClearFault_M3);

    ClearFault_M1.setXY(11, 94);
    ClearFault_M1.setBitmaps(touchgfx::Bitmap(BITMAP_FAULT1_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID));
    add(ClearFault_M1);

    ClearFault_M2.setXY(57, 95);
    ClearFault_M2.setBitmaps(touchgfx::Bitmap(BITMAP_FAULT_2_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID));
    add(ClearFault_M2);

    E14.setXY(3, 3);
    E14.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_ID));
    add(E14);

    M3_S.setXY(388, 242);
    M3_S.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    M3_S.setLinespacing(0);
    M3_S.setTypedText(touchgfx::TypedText(T___SINGLEUSE_755F));
    add(M3_S);

    RPM.setXY(434, 242);
    RPM.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    RPM.setLinespacing(0);
    RPM.setTypedText(touchgfx::TypedText(T___SINGLEUSE_85BW));
    add(RPM);

    RPM_0.setXY(456, 212);
    RPM_0.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    RPM_0.setLinespacing(0);
    RPM_0.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3KW));
    add(RPM_0);

    MAX_RPM.setXY(426, 16);
    MAX_RPM.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    MAX_RPM.setLinespacing(0);
    MAX_RPM.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RIHF));
    add(MAX_RPM);

    RPM_2000.setXY(426, 56);
    RPM_2000.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    RPM_2000.setLinespacing(0);
    RPM_2000.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ASNW));
    add(RPM_2000);

    RPM_1000.setXY(426, 136);
    RPM_1000.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    RPM_1000.setLinespacing(0);
    RPM_1000.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BRZV));
    add(RPM_1000);

    RPM_1500.setXY(426, 95);
    RPM_1500.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    RPM_1500.setLinespacing(0);
    RPM_1500.setTypedText(touchgfx::TypedText(T___SINGLEUSE_67GA));
    add(RPM_1500);

    RPM_500.setXY(436, 175);
    RPM_500.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    RPM_500.setLinespacing(0);
    RPM_500.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9M5B));
    add(RPM_500);

    M2_S.setXY(343, 242);
    M2_S.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    M2_S.setLinespacing(0);
    M2_S.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X7M9));
    add(M2_S);

    M1_S.setXY(298, 242);
    M1_S.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    M1_S.setLinespacing(0);
    M1_S.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3ENM));
    add(M1_S);

    M1_G.setXY(61, 229);
    M1_G.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    M1_G.setLinespacing(0);
    M1_G.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M4PF));
    add(M1_G);

    F1.setXY(20, 104);
    F1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    F1.setLinespacing(0);
    F1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWI7));
    add(F1);

    F2.setXY(66, 105);
    F2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    F2.setLinespacing(0);
    F2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U6US));
    add(F2);

    F3.setXY(113, 104);
    F3.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    F3.setLinespacing(0);
    F3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MBKR));
    add(F3);

    TempScreen.setXY(-40, -2);
    TempScreen.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_INACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_INACTIVE_ID));
    TempScreen.setAction(buttonCallback);
    add(TempScreen);

    Fault1_Indicator.setPosition(-10, 32, 80, 80);
    Fault1_Indicator.setCenter(40, 40);
    Fault1_Indicator.setRadius(10);
    Fault1_Indicator.setLineWidth(0);
    Fault1_Indicator.setArc(0, 360);
    Fault1_IndicatorPainter.setColor(touchgfx::Color::getColorFromRGB(33, 184, 43));
    Fault1_Indicator.setPainter(Fault1_IndicatorPainter);
    add(Fault1_Indicator);

    Fault2_Indicator.setPosition(35, 32, 80, 80);
    Fault2_Indicator.setCenter(40, 40);
    Fault2_Indicator.setRadius(10);
    Fault2_Indicator.setLineWidth(0);
    Fault2_Indicator.setArc(0, 360);
    Fault2_IndicatorPainter.setColor(touchgfx::Color::getColorFromRGB(33, 184, 43));
    Fault2_Indicator.setPainter(Fault2_IndicatorPainter);
    add(Fault2_Indicator);

    Fault3_Indicator.setPosition(82, 33, 80, 80);
    Fault3_Indicator.setCenter(40, 40);
    Fault3_Indicator.setRadius(10);
    Fault3_Indicator.setLineWidth(0);
    Fault3_Indicator.setArc(0, 360);
    Fault3_IndicatorPainter.setColor(touchgfx::Color::getColorFromRGB(33, 184, 43));
    Fault3_Indicator.setPainter(Fault3_IndicatorPainter);
    add(Fault3_Indicator);

    TItle.setXY(82, 11);
    TItle.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    TItle.setLinespacing(0);
    TItle.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YYCD));
    add(TItle);
}

MotorControlScreenViewBase::~MotorControlScreenViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void MotorControlScreenViewBase::setupScreen()
{

}

void MotorControlScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &TempScreen)
    {
        //Interaction1
        //When TempScreen clicked change screen to TempratureScreen
        //Go to TempratureScreen with screen transition towards North
        application().gotoTempratureScreenScreenSlideTransitionNorth();
    }
}
